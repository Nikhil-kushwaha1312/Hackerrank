import os
import heapq

def cookies(k, A):
    # Convert the list to a heap (min-heap)
    heapq.heapify(A)
    steps = 0
    
    while len(A) > 1 and A[0] < k:
        # Pop the two smallest elements
        first = heapq.heappop(A)
        second = heapq.heappop(A)
        
        # Create a new cookie
        new_cookie = first + 2 * second
        
        # Push the new cookie back into the heap
        heapq.heappush(A, new_cookie)
        
        steps += 1
    
    # If the smallest cookie is still less than k, return -1
    return steps if A[0] >= k else -1

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    first_multiple_input = input().rstrip().split()
    n = int(first_multiple_input[0])
    k = int(first_multiple_input[1])

    A = list(map(int, input().rstrip().split()))

    result = cookies(k, A)

    fptr.write(str(result) + '\n')
    fptr.close()
